// https://github.com/raydac/java-comment-preprocessor/wiki/AndroidGradlePreprocessing

// the folder contains the result
def jcpRoot = 'jcp'
// the original root folder path
def srcRoot = 'upstream/pgjdbc/src'

configurations {
    jcp
}

dependencies{
    jcp('com.igormaznitsa:jcp:6.0.1') {
        exclude group: 'org.apache.maven.*'
        exclude group: 'org.codehaus.*'
    }
}

if (!hasProperty("buildProfile")) ext.buildProfile = "jre7"

task preprocessJava << {
    def jcpjar = file(project.configurations.jcp.find { it.name.startsWith("jcp-") })
    ant.taskdef(resource: 'com/igormaznitsa/jcp/ant/antlib.xml', classpath: jcpjar)

    ['/main/java', '/main/resources'].each { dir ->
        def fromDir = srcRoot + dir;
        def toDir = jcpRoot + dir;
        println "Preproces: ${fromDir} -> ${toDir}"
        ant.preprocess(excluded:"none", processing:'java,xml', source: fromDir, destination: toDir){
            cfgFile(file: "${buildProfile}.properties")
        }
    }
}

task preprocessTestJava << {
    def jcpjar = file(project.configurations.jcp.find { it.name.startsWith("jcp-") })
    ant.taskdef(resource: 'com/igormaznitsa/jcp/ant/antlib.xml', classpath: jcpjar)

    ['/test/java', '/test/resources'].each { dir ->
        def fromDir = srcRoot + dir;
        def toDir = jcpRoot + dir;
        println "Preproces: ${fromDir} -> ${toDir}"
        ant.preprocess(excluded:"none", processing:'java,xml', source: fromDir, destination: toDir){
            cfgFile(file: "${buildProfile}.properties")
        }
    }
}
